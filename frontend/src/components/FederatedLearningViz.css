/* frontend/src/components/FederatedLearningViz.css */

.fl-container {
  background: var(--bg-secondary);
  border: 1px solid var(--border-light);
  border-radius: 12px;
  padding: 20px;
  box-shadow: var(--shadow-primary);
  position: relative;
  overflow: hidden;
}

.fl-container::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 3px;
  background: linear-gradient(90deg, var(--accent-primary), var(--accent-secondary));
  border-radius: 12px 12px 0 0;
}

.reactflow-wrapper {
  height: 400px;
  border: 1px solid var(--border-light);
  border-radius: 8px;
  background: var(--card-bg);
  margin-bottom: 20px;
  position: relative;
  overflow: hidden;
}

.reactflow-wrapper::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: radial-gradient(circle at 50% 50%, rgba(0, 170, 255, 0.05) 0%, transparent 70%);
  pointer-events: none;
}

.simulation-button {
  background: var(--accent-primary);
  color: #000;
  border: none;
  padding: 12px 24px;
  border-radius: 8px;
  cursor: pointer;
  font-weight: 600;
  font-size: 1em;
  transition: all 200ms ease;
  box-shadow: 0 0 12px rgba(0, 170, 255, 0.4);
  margin-top: 16px;
  width: 100%;
}

.simulation-button:hover {
  transform: translateY(-2px);
  box-shadow: 0 0 20px rgba(0, 170, 255, 0.6);
  filter: brightness(1.1);
}

.simulation-button:disabled {
  background: rgba(255, 255, 255, 0.1);
  color: rgba(255, 255, 255, 0.5);
  cursor: not-allowed;
  transform: none;
  box-shadow: none;
}

/* Live metrics panel */
.fl-metrics-panel {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
  gap: 16px;
  margin-bottom: 20px;
  padding: 16px;
  background: var(--bg-secondary);
  border-radius: 8px;
  border: 1px solid var(--border-light);
}

.fl-metric-card {
  text-align: center;
  padding: 12px;
  background: var(--card-bg);
  border-radius: 6px;
  border: 1px solid var(--border-light);
  transition: all 200ms ease;
}

.fl-metric-card:hover {
  background: rgba(59, 130, 246, 0.06);
  border-color: var(--accent-primary);
  transform: translateY(-2px);
}

.fl-metric-label {
  font-size: 0.8em;
  color: var(--text-secondary);
  text-transform: uppercase;
  letter-spacing: 0.5px;
  margin-bottom: 4px;
}

.fl-metric-value {
  font-size: 1.4em;
  font-weight: 600;
  color: var(--text-heading);
  font-family: 'Fira Code', monospace;
}

.fl-metric-value.cyan {
  color: var(--accent-primary);
  text-shadow: 0 0 8px rgba(0, 170, 255, 0.4);
}

.fl-metric-value.amber {
  color: var(--accent-secondary);
  text-shadow: 0 0 8px rgba(244, 162, 97, 0.4);
}

/* Status indicators */
.fl-status {
  display: inline-flex;
  align-items: center;
  gap: 8px;
  padding: 4px 8px;
  border-radius: 4px;
  font-size: 0.8em;
  font-weight: 600;
}

.fl-status.active {
  background: rgba(0, 170, 255, 0.2);
  color: var(--accent-primary);
  border: 1px solid rgba(0, 170, 255, 0.3);
}

.fl-status.training {
  background: rgba(244, 162, 97, 0.2);
  color: var(--accent-secondary);
  border: 1px solid rgba(244, 162, 97, 0.3);
}

.fl-status.completed {
  background: rgba(42, 157, 143, 0.2);
  color: var(--accent-teal);
  border: 1px solid rgba(42, 157, 143, 0.3);
}

/* Progress bars */
.fl-progress {
  width: 100%;
  height: 6px;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 3px;
  overflow: hidden;
  margin-top: 8px;
}

.fl-progress-bar {
  height: 100%;
  background: linear-gradient(90deg, var(--accent-primary), var(--accent-secondary));
  border-radius: 3px;
  transition: width 500ms ease;
  box-shadow: 0 0 8px rgba(0, 170, 255, 0.4);
}

/* Node styling overrides for ReactFlow */
.react-flow__node {
  background: var(--bg-secondary) !important;
  border: 2px solid var(--border-light) !important;
  color: var(--text-body) !important;
  border-radius: 8px !important;
  box-shadow: var(--shadow-primary) !important;
}

.react-flow__node:hover {
  border-color: var(--accent-primary) !important;
  box-shadow: 0 0 16px rgba(0, 170, 255, 0.4) !important;
}

.react-flow__edge {
  stroke: var(--accent-primary) !important;
  stroke-width: 2px !important;
}

.react-flow__edge.animated {
  stroke-dasharray: 5 !important;
  animation: dash 1s linear infinite !important;
}

@keyframes dash {
  to {
    stroke-dashoffset: -10;
  }
}